#!/bin/bash
##########################################################################################
# CONNEXA ADMIN PANEL - –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –£–°–¢–ê–ù–û–í–û–ß–ù–´–ô –°–ö–†–ò–ü–¢  
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å GitHub —Å –ø–æ—ç—Ç–∞–ø–Ω—ã–º–∏ —Ç–µ—Å—Ç–∞–º–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
# –í–µ—Ä—Å–∏—è: 6.0 - UPGRADED VERSION —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ —Å—É–ø–µ—Ä-–ø–∞—Ä—Å–µ—Ä–æ–º
# –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/mrolivershea-cyber/Connexa-UPGRATE
##########################################################################################

set -e  # Exit on any error

# –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏
export DEBIAN_FRONTEND=noninteractive
export NEEDRESTART_MODE=a
export NEEDRESTART_SUSPEND=1

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
INSTALL_DIR="/app"
REPO_URL="https://github.com/mrolivershea-cyber/Connexa-UPGRATE.git"
BRANCH="main"
ERRORS_FOUND=0
WARNINGS_FOUND=0

##########################################################################################
# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
##########################################################################################

print_header() {
    echo ""
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo -e "${CYAN}$1${NC}"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
    ERRORS_FOUND=$((ERRORS_FOUND + 1))
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
    WARNINGS_FOUND=$((WARNINGS_FOUND + 1))
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_test() {
    echo -e "${CYAN}üß™ $1${NC}"
}

##########################################################################################
# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
##########################################################################################

test_step() {
    local step_name=$1
    local test_command=$2
    local expected_result=$3
    
    print_test "Testing: $step_name"
    
    if eval "$test_command"; then
        print_success "$step_name - PASSED"
        return 0
    else
        print_error "$step_name - FAILED"
        if [ "$expected_result" == "critical" ]; then
            echo ""
            echo -e "${RED}CRITICAL ERROR: Cannot continue installation!${NC}"
            exit 1
        fi
        return 1
    fi
}

##########################################################################################
# BANNER
##########################################################################################

clear
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                                                                                ‚ïë"
echo "‚ïë               CONNEXA ADMIN PANEL - –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê v4.1              ‚ïë"
echo "‚ïë                                                                                ‚ïë"
echo "‚ïë            üöÄ BACKEND + FRONTEND –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò (–ö–ò–¢–ê–ô–°–ö–û–ï –ó–ï–†–ö–ê–õ–û)            ‚ïë"
echo "‚ïë                                                                                ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""
sleep 2

##########################################################################################
# –ü–†–û–í–ï–†–ö–ê ROOT
##########################################################################################

print_header "–ü–†–û–í–ï–†–ö–ê –ü–†–ê–í"

if [ "$EUID" -ne 0 ]; then
    print_error "–°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo bash universal_install.sh"
    exit 1
fi

print_success "–ó–∞–ø—É—â–µ–Ω–æ —Å –ø—Ä–∞–≤–∞–º–∏ root"

##########################################################################################
# –û–ß–ò–°–¢–ö–ê –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–´–• –ü–†–û–¶–ï–°–°–û–í APT/DPKG (–ê–ì–†–ï–°–°–ò–í–ù–ê–Ø)
##########################################################################################

print_header "–ü–û–î–ì–û–¢–û–í–ö–ê –°–ò–°–¢–ï–ú–´"

print_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ —É–±–∏–π—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
kill_process_hard() {
    local process_name=$1
    local max_attempts=5
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if pgrep -x "$process_name" > /dev/null; then
            print_info "–ü–æ–ø—ã—Ç–∫–∞ $attempt: –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å $process_name..."
            pkill -9 "$process_name" 2>/dev/null || true
            sleep 2
            
            if ! pgrep -x "$process_name" > /dev/null; then
                print_success "–ü—Ä–æ—Ü–µ—Å—Å $process_name –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                return 0
            fi
        else
            return 0
        fi
        attempt=$((attempt + 1))
    done
    
    print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $process_name –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –£–±–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å dpkg
print_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
kill_process_hard "apt-get"
kill_process_hard "apt"
kill_process_hard "dpkg"
kill_process_hard "unattended-upgr"
kill_process_hard "packagekitd"

# –ü–æ–¥–æ–∂–¥–∞—Ç—å
sleep 3

# –£–¥–∞–ª–∏—Ç—å –≤—Å–µ lock —Ñ–∞–π–ª—ã
print_info "–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö lock —Ñ–∞–π–ª–æ–≤..."
rm -f /var/lib/dpkg/lock-frontend 2>/dev/null || true
rm -f /var/lib/dpkg/lock 2>/dev/null || true
rm -f /var/lib/apt/lists/lock 2>/dev/null || true
rm -f /var/cache/apt/archives/lock 2>/dev/null || true
rm -f /var/lib/dpkg/lock-backend 2>/dev/null || true

# –ï—â—ë –æ–¥–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–∂–∏–¥–∞–Ω–∏–µ
sleep 3

# –ò—Å–ø—Ä–∞–≤–∏—Ç—å dpkg –ò –î–û–ñ–î–ê–¢–¨–°–Ø –ó–ê–í–ï–†–®–ï–ù–ò–Ø
print_info "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è dpkg (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-2 –º–∏–Ω—É—Ç—ã)..."
DEBIAN_FRONTEND=noninteractive dpkg --configure -a 2>&1 | tee /tmp/dpkg_configure.log | tail -5

# –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è dpkg
print_info "–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è dpkg..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ dpkg –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
if pgrep -x "dpkg" > /dev/null; then
    print_warning "dpkg –≤—Å—ë –µ—â—ë —Ä–∞–±–æ—Ç–∞–µ—Ç, –∂–¥—ë–º –µ—â—ë 10 —Å–µ–∫—É–Ω–¥..."
    sleep 10
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ lock —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ dpkg
print_info "–§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ lock —Ñ–∞–π–ª–æ–≤..."
rm -f /var/lib/dpkg/lock-frontend 2>/dev/null || true
rm -f /var/lib/dpkg/lock 2>/dev/null || true

print_success "–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —É—Å—Ç–∞–Ω–æ–≤–∫–µ"

##########################################################################################
# –®–ê–ì 1: –£–°–¢–ê–ù–û–í–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –ü–ê–ö–ï–¢–û–í
##########################################################################################

print_header "–®–ê–ì 1/12: –£–°–¢–ê–ù–û–í–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –ü–ê–ö–ï–¢–û–í"

print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤..."
if ! command -v apt-get &> /dev/null; then
    print_error "apt-get –Ω–µ –Ω–∞–π–¥–µ–Ω. –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ Debian/Ubuntu"
    exit 1
fi

# –û—Ç–∫–ª—é—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª—É–∂–±
print_info "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤..."
if [ -f /etc/needrestart/needrestart.conf ]; then
    sed -i "s/#\$nrconf{restart} = 'i';/\$nrconf{restart} = 'a';/" /etc/needrestart/needrestart.conf 2>/dev/null || true
fi

# –û—Ç–∫–ª—é—á–∏—Ç—å –¥–∏–∞–ª–æ–≥–∏ kernel upgrade
if [ -f /etc/needrestart/conf.d/50-local.conf ]; then
    echo "\$nrconf{kernelhints} = 0;" > /etc/needrestart/conf.d/50-local.conf
else
    mkdir -p /etc/needrestart/conf.d/
    echo "\$nrconf{kernelhints} = 0;" > /etc/needrestart/conf.d/50-local.conf
fi

print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
apt-get update -qq 2>&1 | grep -v "debconf:" || true

print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
apt-get install -y -qq \
    -o Dpkg::Options::="--force-confdef" \
    -o Dpkg::Options::="--force-confold" \
    python3 \
    python3-pip \
    python3-venv \
    ppp \
    pptp-linux \
    sqlite3 \
    curl \
    wget \
    git \
    supervisor \
    net-tools \
    iputils-ping \
    iptables 2>&1 | grep -v "debconf:" || true

# –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
test_step "Python3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "command -v python3 &> /dev/null" "critical"
test_step "pip —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "command -v pip3 &> /dev/null" "critical"
test_step "pppd —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "command -v pppd &> /dev/null" "critical"
test_step "git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "command -v git &> /dev/null" "critical"
test_step "supervisor —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "command -v supervisorctl &> /dev/null" "critical"

print_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

##########################################################################################
# –®–ê–ì 2: –£–°–¢–ê–ù–û–í–ö–ê NODE.JS (–ë–ï–ó YARN)
##########################################################################################

print_header "–®–ê–ì 2/12: –£–°–¢–ê–ù–û–í–ö–ê NODE.JS"

if ! command -v node &> /dev/null || [ "$(node --version | cut -d'.' -f1 | tr -d 'v')" -lt 18 ]; then
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18.x..."
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash - > /dev/null 2>&1
    apt-get install -y -qq \
        -o Dpkg::Options::="--force-confdef" \
        -o Dpkg::Options::="--force-confold" \
        nodejs 2>&1 | grep -v "debconf:" || true
    print_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
else
    print_info "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ npm –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ —Å–µ—Ç–∏
print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ npm –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã..."
npm config set fetch-retry-mintimeout 20000 2>/dev/null || true
npm config set fetch-retry-maxtimeout 120000 2>/dev/null || true
npm config set fetch-timeout 300000 2>/dev/null || true
npm config set registry https://registry.npmjs.org/ 2>/dev/null || true

# –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
test_step "Node.js –≤–µ—Ä—Å–∏—è >= 18" "[ \$(node --version | cut -d'.' -f1 | tr -d 'v') -ge 18 ]" "critical"
test_step "npm –¥–æ—Å—Ç—É–ø–µ–Ω" "command -v npm &> /dev/null" "critical"

##########################################################################################
# –®–ê–ì 3: –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø
##########################################################################################

print_header "–®–ê–ì 3/12: –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø –ò–ó GITHUB"

print_info "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_URL"
print_info "–í–µ—Ç–∫–∞: $BRANCH"
print_info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $INSTALL_DIR"

if [ -d "$INSTALL_DIR/.git" ]; then
    print_warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $INSTALL_DIR —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    cd "$INSTALL_DIR"
    git fetch origin
    git reset --hard origin/$BRANCH
    print_success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –æ–±–Ω–æ–≤–ª—ë–Ω"
else
    if [ -d "$INSTALL_DIR" ] && [ "$(ls -A $INSTALL_DIR)" ]; then
        print_warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $INSTALL_DIR –Ω–µ –ø—É—Å—Ç–∞—è. –°–æ–∑–¥–∞—é –±—ç–∫–∞–ø..."
        mv "$INSTALL_DIR" "${INSTALL_DIR}_backup_$(date +%Y%m%d_%H%M%S)"
    fi
    
    print_info "–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    git clone -b $BRANCH $REPO_URL $INSTALL_DIR
    print_success "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
fi

cd "$INSTALL_DIR"

# –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
test_step "backend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -d $INSTALL_DIR/backend ]" "critical"
test_step "frontend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -d $INSTALL_DIR/frontend ]" "critical"
test_step "requirements.txt —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f $INSTALL_DIR/backend/requirements.txt ]" "critical"
test_step "package.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f $INSTALL_DIR/frontend/package.json ]" "critical"

##########################################################################################
# –®–ê–ì 4: –°–û–ó–î–ê–ù–ò–ï /dev/ppp
##########################################################################################

print_header "–®–ê–ì 4/12: –ù–ê–°–¢–†–û–ô–ö–ê PPTP –£–°–¢–†–û–ô–°–¢–í–ê"

if [ -e /dev/ppp ]; then
    print_info "/dev/ppp —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ /dev/ppp..."
    mknod /dev/ppp c 108 0
    chmod 600 /dev/ppp
    print_success "/dev/ppp —Å–æ–∑–¥–∞–Ω"
fi

print_info "–ü—Ä–∞–≤–∞ –Ω–∞ /dev/ppp:"
ls -la /dev/ppp

# –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ /dev/ppp
test_step "/dev/ppp —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -e /dev/ppp ]" "critical"
test_step "/dev/ppp –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏" "[ -w /dev/ppp ]" "warning"

##########################################################################################
# –®–ê–ì 5: –ù–ê–°–¢–†–û–ô–ö–ê PPTP –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò
##########################################################################################

print_header "–®–ê–ì 5/12: –ù–ê–°–¢–†–û–ô–ö–ê PPTP –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"

mkdir -p /etc/ppp/peers

cat > /etc/ppp/options.pptp << 'EOF'
lock
noauth
nobsdcomp
nodeflate
EOF

print_success "PPTP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ PPTP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
test_step "PPTP config —Å–æ–∑–¥–∞–Ω" "[ -f /etc/ppp/options.pptp ]" "warning"

##########################################################################################
# –®–ê–ì 6: –£–°–¢–ê–ù–û–í–ö–ê PYTHON –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
##########################################################################################

print_header "–®–ê–ì 6/12: –£–°–¢–ê–ù–û–í–ö–ê PYTHON –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô"

cd "$INSTALL_DIR/backend"

if [ ! -d "venv" ]; then
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python..."
    python3 -m venv venv
    print_success "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
else
    print_info "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

source venv/bin/activate

print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..."
pip install --upgrade pip --quiet 2>&1 | grep -v "WARNING" || true

print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ requirements.txt..."
pip install -r requirements.txt --quiet 2>&1 | grep -v "WARNING" || true

print_success "Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
test_step "Virtual environment –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω" "[ -n \"\$VIRTUAL_ENV\" ]" "critical"
test_step "FastAPI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "python -c 'import fastapi' 2>/dev/null" "critical"
test_step "SQLAlchemy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "python -c 'import sqlalchemy' 2>/dev/null" "critical"
test_step "uvicorn —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "command -v uvicorn &> /dev/null" "critical"

deactivate

##########################################################################################
# –®–ê–ì 7: FRONTEND –ß–ï–†–ï–ó –ö–ò–¢–ê–ô–°–ö–û–ï –ó–ï–†–ö–ê–õ–û (–ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò)
##########################################################################################

print_header "–®–ê–ì 7/12: FRONTEND –ó–ê–í–ò–°–ò–ú–û–°–¢–ò (–ö–ò–¢–ê–ô–°–ö–û–ï –ó–ï–†–ö–ê–õ–û)"

cd "$INSTALL_DIR/frontend"

print_info "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
rm -rf node_modules package-lock.json 2>/dev/null || true

print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ –∫–∏—Ç–∞–π—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–æ npmmirror.com (–æ–±—ã—á–Ω–æ 2-3 –º–∏–Ω—É—Ç—ã)..."

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ registry
npm config set registry https://registry.npmmirror.com/ 2>/dev/null || true

# –ö–†–ò–¢–ò–ß–ù–û: –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å IPv6 –≤ —Å–∏—Å—Ç–µ–º–µ (npm –∑–∞–≤–∏—Å–∞–µ—Ç –Ω–∞ IPv6)
print_info "–í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ IPv6 –¥–ª—è npm install..."
sysctl -w net.ipv6.conf.all.disable_ipv6=1 > /dev/null 2>&1 || true
sysctl -w net.ipv6.conf.default.disable_ipv6=1 > /dev/null 2>&1 || true

print_info "npm install —á–µ—Ä–µ–∑ IPv4 ONLY (–º–∞–∫—Å–∏–º—É–º 5 –º–∏–Ω—É—Ç)..."

# –ó–∞–ø—É—Å–∫ npm install –≤ —Ñ–æ–Ω–µ
(npm install --legacy-peer-deps --force 2>&1 | tee /tmp/npm_install.log) &
NPM_PID=$!

SECONDS=0
MAX_TIME=300
LAST_OUTPUT_TIME=0

while [ $SECONDS -lt $MAX_TIME ]; do
    if ! kill -0 $NPM_PID 2>/dev/null; then
        # npm –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
        wait $NPM_PID
        NPM_EXIT=$?
        break
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ npm –µ—â—ë —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø–∏—à–µ—Ç –≤ –ª–æ–≥)
    if [ -f /tmp/npm_install.log ]; then
        CURRENT_SIZE=$(wc -c < /tmp/npm_install.log)
        if [ $CURRENT_SIZE -gt $LAST_OUTPUT_TIME ]; then
            LAST_OUTPUT_TIME=$CURRENT_SIZE
        fi
    fi
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    if [ $((SECONDS % 10)) -eq 0 ]; then
        echo -n "‚è≥ ${SECONDS}s "
    fi
    sleep 1
done

# –ï—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è - —É–±–∏—Ç—å
if kill -0 $NPM_PID 2>/dev/null; then
    print_warning "–¢–∞–π–º–∞—É—Ç ${MAX_TIME}s! –£–±–∏–≤–∞–µ–º npm..."
    kill -9 $NPM_PID 2>/dev/null
    NPM_EXIT=124
fi

echo ""

# –í–µ—Ä–Ω—É—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π registry
npm config set registry https://registry.npmjs.org/ 2>/dev/null || true

# –ö–†–ò–¢–ò–ß–ù–û: –í–∫–ª—é—á–∏—Ç—å IPv6 –æ–±—Ä–∞—Ç–Ω–æ
print_info "–í–∫–ª—é—á–µ–Ω–∏–µ IPv6 –æ–±—Ä–∞—Ç–Ω–æ..."
sysctl -w net.ipv6.conf.all.disable_ipv6=0 > /dev/null 2>&1 || true
sysctl -w net.ipv6.conf.default.disable_ipv6=0 > /dev/null 2>&1 || true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
if [ -d "node_modules" ] && [ -n "$(ls -A node_modules 2>/dev/null)" ]; then
    NODE_MODULES_SIZE=$(du -sh node_modules 2>/dev/null | cut -f1)
    print_success "‚úÖ node_modules —Å–æ–∑–¥–∞–Ω ($NODE_MODULES_SIZE)"
    
    # –ö–†–ò–¢–ò–ß–ù–û: –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ajv@8 –ü–û–í–ï–†–• —Å—Ç–∞—Ä–æ–≥–æ (–Ω–µ —É–¥–∞–ª—è—è)
    print_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ ajv@6 ‚Üí ajv@8 –ø–æ–≤–µ—Ä—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ..."
    sysctl -w net.ipv6.conf.all.disable_ipv6=1 > /dev/null 2>&1 || true
    npm config set registry https://registry.npmmirror.com/ 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ajv@8 –ø–æ–≤–µ—Ä—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ v6
    npm install ajv@8.12.0 --legacy-peer-deps --force --no-save 2>&1 | tail -3 || true
    
    npm config set registry https://registry.npmjs.org/ 2>/dev/null || true
    sysctl -w net.ipv6.conf.all.disable_ipv6=0 > /dev/null 2>&1 || true
    
    print_success "‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (ajv –æ–±–Ω–æ–≤–ª—ë–Ω –¥–æ v8)"
    FRONTEND_INSTALLED=true
else
    print_warning "‚ö†Ô∏è  npm install –Ω–µ —Å–æ–∑–¥–∞–ª node_modules"
    print_info "–õ–æ–≥–∏: cat /tmp/npm_install.log | tail -50"
    print_warning "Frontend –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω, backend —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è"
    FRONTEND_INSTALLED=false
fi

# –¢–ï–°–¢ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend (–ù–ï –∫—Ä–∏—Ç–∏—á–Ω–æ)
test_step "node_modules —Å–æ–∑–¥–∞–Ω" "[ -d $INSTALL_DIR/frontend/node_modules ] && [ -n \"\$(ls -A $INSTALL_DIR/frontend/node_modules 2>/dev/null)\" ]" "warning"

print_info "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."

##########################################################################################
# –®–ê–ì 8: –ü–†–û–í–ï–†–ö–ê –ò –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï .ENV –§–ê–ô–õ–û–í
##########################################################################################

print_header "–®–ê–ì 8/12: –ù–ê–°–¢–†–û–ô–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø"

# –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(hostname -I | awk '{print $1}')
print_info "IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"

# Backend .env
if [ -f "$INSTALL_DIR/backend/.env" ]; then
    print_success "Backend .env –Ω–∞–π–¥–µ–Ω"
    
    if grep -q "ADMIN_SERVER_IP" "$INSTALL_DIR/backend/.env"; then
        ADMIN_IP=$(grep ADMIN_SERVER_IP "$INSTALL_DIR/backend/.env" | cut -d'=' -f2 | tr -d '"' | tr -d "'")
        print_info "ADMIN_SERVER_IP = $ADMIN_IP"
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π IP –µ—Å–ª–∏ —ç—Ç–æ emergentagent –∏–ª–∏ localhost
        if [[ "$ADMIN_IP" == *"emergent"* ]] || [[ "$ADMIN_IP" == "localhost"* ]] || [[ "$ADMIN_IP" == "127.0.0.1"* ]]; then
            print_warning "ADMIN_SERVER_IP —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω ($ADMIN_IP), –æ–±–Ω–æ–≤–ª—è–µ–º..."
            sed -i "s|ADMIN_SERVER_IP=.*|ADMIN_SERVER_IP=$SERVER_IP|g" "$INSTALL_DIR/backend/.env"
            print_success "ADMIN_SERVER_IP –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ $SERVER_IP"
        else
            print_info "ADMIN_SERVER_IP —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π: $ADMIN_IP"
        fi
    else
        print_warning "ADMIN_SERVER_IP –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º..."
        echo "ADMIN_SERVER_IP=$SERVER_IP" >> "$INSTALL_DIR/backend/.env"
        print_success "ADMIN_SERVER_IP –¥–æ–±–∞–≤–ª–µ–Ω"
    fi
else
    print_warning "Backend .env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º..."
    cat > "$INSTALL_DIR/backend/.env" << EOF
ADMIN_SERVER_IP=$SERVER_IP
DATABASE_URL=sqlite:///./connexa.db
SECRET_KEY=$(openssl rand -hex 32)
EOF
    print_success "Backend .env —Å–æ–∑–¥–∞–Ω"
fi

# Frontend .env - –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û
if [ -f "$INSTALL_DIR/frontend/.env" ]; then
    print_success "Frontend .env –Ω–∞–π–¥–µ–Ω"
    
    if grep -q "REACT_APP_BACKEND_URL" "$INSTALL_DIR/frontend/.env"; then
        BACKEND_URL=$(grep REACT_APP_BACKEND_URL "$INSTALL_DIR/frontend/.env" | cut -d'=' -f2)
        print_info "–¢–µ–∫—É—â–∏–π REACT_APP_BACKEND_URL = $BACKEND_URL"
        
        # –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –û–ë–ù–û–í–ò–¢–¨ –ù–ê –ü–†–ê–í–ò–õ–¨–ù–´–ô URL
        if [[ "$BACKEND_URL" != "http://$SERVER_IP:8001" ]]; then
            print_warning "REACT_APP_BACKEND_URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –æ–±–Ω–æ–≤–ª—è–µ–º..."
            sed -i "s|REACT_APP_BACKEND_URL=.*|REACT_APP_BACKEND_URL=http://$SERVER_IP:8001|g" "$INSTALL_DIR/frontend/.env"
            print_success "REACT_APP_BACKEND_URL –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ http://$SERVER_IP:8001"
        else
            print_success "REACT_APP_BACKEND_URL —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π"
        fi
    else
        print_warning "REACT_APP_BACKEND_URL –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º..."
        echo "REACT_APP_BACKEND_URL=http://$SERVER_IP:8001" >> "$INSTALL_DIR/frontend/.env"
        print_success "REACT_APP_BACKEND_URL –¥–æ–±–∞–≤–ª–µ–Ω"
    fi
else
    print_warning "Frontend .env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º..."
    cat > "$INSTALL_DIR/frontend/.env" << EOF
REACT_APP_BACKEND_URL=http://$SERVER_IP:8001
EOF
    print_success "Frontend .env —Å–æ–∑–¥–∞–Ω"
fi

print_success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è IP: $SERVER_IP"

# –¢–ï–°–¢ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤
test_step "Backend .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f $INSTALL_DIR/backend/.env ]" "critical"
test_step "Frontend .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f $INSTALL_DIR/frontend/.env ]" "critical"
test_step "REACT_APP_BACKEND_URL –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π" "grep -q \"REACT_APP_BACKEND_URL=http://$SERVER_IP:8001\" $INSTALL_DIR/frontend/.env" "critical"

##########################################################################################
# –®–ê–ì 9: –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•
##########################################################################################

print_header "–®–ê–ì 9/12: –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•"

cd "$INSTALL_DIR/backend"
source venv/bin/activate

if [ ! -f "connexa.db" ]; then
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    python3 << 'PYTHON_SCRIPT'
import sys
sys.path.insert(0, '/app/backend')

try:
    from database import Base, engine, SessionLocal, User, hash_password
    
    # –°–æ–∑–¥–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã (–≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ scamalytics)
    Base.metadata.create_all(bind=engine)
    
    # –ú–∏–≥—Ä–∞—Ü–∏—è: –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    import sqlite3
    conn = sqlite3.connect('/app/backend/connexa.db')
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –¥–æ–±–∞–≤–∏—Ç—å scamalytics_fraud_score
    cursor.execute("PRAGMA table_info(nodes)")
    columns = [col[1] for col in cursor.fetchall()]
    
    if 'scamalytics_fraud_score' not in columns:
        cursor.execute('ALTER TABLE nodes ADD COLUMN scamalytics_fraud_score INTEGER DEFAULT NULL')
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ scamalytics_fraud_score")
    
    if 'scamalytics_risk' not in columns:
        cursor.execute('ALTER TABLE nodes ADD COLUMN scamalytics_risk TEXT DEFAULT NULL')
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ scamalytics_risk")
    
    conn.commit()
    conn.close()
    
    # –°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    db = SessionLocal()
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ —É–∂–µ admin
    existing_admin = db.query(User).filter(User.username == "admin").first()
    
    if not existing_admin:
        admin = User(
            username="admin",
            password=hash_password("admin")
        )
        db.add(admin)
        db.commit()
        print("‚úÖ Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω (admin/admin)")
    else:
        print("‚ÑπÔ∏è  Admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    db.close()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
    import traceback
    traceback.print_exc()
    sys.exit(1)
PYTHON_SCRIPT

    if [ $? -eq 0 ]; then
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        print_warning "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –±–µ–∑ –ë–î - —Å–æ–∑–¥–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é"
    fi
else
    print_info "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö connexa.db —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–¥–º–∏–Ω–∞
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin..."
    python3 << 'PYTHON_SCRIPT'
import sys
sys.path.insert(0, '/app/backend')

try:
    from database import SessionLocal, User, hash_password
    
    db = SessionLocal()
    admin = db.query(User).filter(User.username == "admin").first()
    
    if admin:
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        print("‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º...")
        admin = User(username="admin", password=hash_password("admin"))
        db.add(admin)
        db.commit()
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å–æ–∑–¥–∞–Ω")
    
    db.close()
except Exception as e:
    print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ admin: {e}")
PYTHON_SCRIPT
fi

deactivate

# –¢–ï–°–¢ 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
test_step "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞" "[ -f $INSTALL_DIR/backend/connexa.db ]" "critical"
test_step "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏" "[ -w $INSTALL_DIR/backend/connexa.db ]" "critical"
test_step "–¢–∞–±–ª–∏—Ü–∞ users —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "sqlite3 $INSTALL_DIR/backend/connexa.db 'SELECT name FROM sqlite_master WHERE type=\"table\" AND name=\"users\";' | grep -q users" "critical"

##########################################################################################
# –®–ê–ì 10: –ù–ê–°–¢–†–û–ô–ö–ê SUPERVISOR
##########################################################################################

print_header "–®–ê–ì 10/12: –ù–ê–°–¢–†–û–ô–ö–ê SUPERVISOR"

# Backend config
print_info "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ backend..."
cat > /etc/supervisor/conf.d/connexa-backend.conf << EOF
[program:backend]
command=$INSTALL_DIR/backend/venv/bin/uvicorn server:app --host 0.0.0.0 --port 8001
directory=$INSTALL_DIR/backend
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/backend.err.log
stdout_logfile=/var/log/supervisor/backend.out.log
user=root
environment=PATH="$INSTALL_DIR/backend/venv/bin:/usr/local/bin:/usr/bin:/bin"
EOF

print_success "Backend –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# Frontend config (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ node_modules —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
if [ "$FRONTEND_INSTALLED" = true ] && [ -d "$INSTALL_DIR/frontend/node_modules" ]; then
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ frontend..."
    cat > /etc/supervisor/conf.d/connexa-frontend.conf << EOF
[program:frontend]
command=/usr/bin/npm start
directory=$INSTALL_DIR/frontend
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/frontend.err.log
stdout_logfile=/var/log/supervisor/frontend.out.log
environment=PATH="/usr/local/bin:/usr/bin:/bin",HOST="0.0.0.0",PORT="3000"
user=root
EOF
    print_success "Frontend –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
else
    print_warning "Frontend –∫–æ–Ω—Ñ–∏–≥ –ø—Ä–æ–ø—É—â–µ–Ω (node_modules –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)"
fi

# Reload supervisor
print_info "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Supervisor..."
supervisorctl reread
supervisorctl update

print_success "Supervisor –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –¢–ï–°–¢ 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ Supervisor –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
test_step "Backend supervisor config —Å–æ–∑–¥–∞–Ω" "[ -f /etc/supervisor/conf.d/connexa-backend.conf ]" "critical"

##########################################################################################
# –®–ê–ì 11: –ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–û–í
##########################################################################################

print_header "–®–ê–ì 11/12: –ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–û–í"

print_info "–ó–∞–ø—É—Å–∫ backend..."
supervisorctl start backend
sleep 5

# –ó–∞–ø—É—Å—Ç–∏—Ç—å frontend –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if [ "$FRONTEND_INSTALLED" = true ] && [ -d "$INSTALL_DIR/frontend/node_modules" ]; then
    print_info "–ó–∞–ø—É—Å–∫ frontend..."
    supervisorctl start frontend
    sleep 5
    print_success "Frontend –∑–∞–ø—É—â–µ–Ω"
else
    print_warning "Frontend –ø—Ä–æ–ø—É—â–µ–Ω (–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)"
fi

print_success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"

print_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ (30 —Å–µ–∫—É–Ω–¥)..."
for i in {30..1}; do
    echo -ne "\r‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: $i —Å–µ–∫—É–Ω–¥   "
    sleep 1
done
echo ""

print_info "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
supervisorctl status

# –¢–ï–°–¢ 11: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
test_step "Backend –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω" "supervisorctl status backend | grep -q RUNNING" "critical"
test_step "Backend —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 8001" "netstat -tuln | grep -q ':8001' || sleep 5 && netstat -tuln | grep -q ':8001'" "critical"

# Frontend –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if [ "$FRONTEND_INSTALLED" = true ]; then
    test_step "Frontend –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω" "supervisorctl status frontend | grep -q RUNNING" "warning"
    test_step "Frontend —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 3000" "netstat -tuln | grep -q ':3000'" "warning"
fi

##########################################################################################
# –®–ê–ì 12: –§–ò–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ API
##########################################################################################

print_header "–®–ê–ì 12/12: –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API"

print_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend API (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 2 –º–∏–Ω—É—Ç)..."
RETRY_COUNT=0
MAX_RETRIES=24  # 24 –ø–æ–ø—ã—Ç–∫–∏ √ó 5 —Å–µ–∫—É–Ω–¥ = 2 –º–∏–Ω—É—Ç—ã

while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
    if curl -s -f http://localhost:8001/api/stats > /dev/null 2>&1; then
        print_success "Backend API –æ—Ç–≤–µ—á–∞–µ—Ç (–ø–æ–ø—ã—Ç–∫–∞ $((RETRY_COUNT + 1)))"
        break
    else
        RETRY_COUNT=$((RETRY_COUNT + 1))
        echo -ne "\r‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $RETRY_COUNT/$MAX_RETRIES (–æ–∂–∏–¥–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞ backend)...   "
        sleep 5
    fi
done
echo ""

if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
    print_warning "Backend API –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –ø–æ—Å–ª–µ 2 –º–∏–Ω—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è"
    print_info "–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - backend –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ"
    print_info "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â—ë 1-2 –º–∏–Ω—É—Ç—ã –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ: curl http://localhost:8001/api/stats"
else
    # –¢–ï–°–¢ 12: API endpoints
    test_step "GET /api/stats —Ä–∞–±–æ—Ç–∞–µ—Ç" "curl -s -f http://localhost:8001/api/stats > /dev/null" "warning"
    
    # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ª–æ–≥–∏–Ω
    print_test "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–Ω–∞ admin/admin..."
    LOGIN_RESULT=$(curl -s -X POST http://localhost:8001/api/auth/login \
        -H "Content-Type: application/json" \
        -d '{"username":"admin","password":"admin"}')
    
    if echo "$LOGIN_RESULT" | grep -q "access_token"; then
        print_success "–õ–æ–≥–∏–Ω admin/admin —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ"
        TOKEN=$(echo "$LOGIN_RESULT" | grep -o '"access_token":"[^"]*"' | cut -d'"' -f4)
        print_info "–¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${TOKEN:0:50}..."
    else
        print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ —Å admin/admin"
        print_info "–†–µ–∑—É–ª—å—Ç–∞—Ç: $LOGIN_RESULT"
    fi
fi

##########################################################################################
# –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢
##########################################################################################

print_header "–£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê"

echo ""
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                           –°–¢–ê–¢–ò–°–¢–ò–ö–ê –£–°–¢–ê–ù–û–í–ö–ò                                  ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

if [ $ERRORS_FOUND -eq 0 ] && [ $WARNINGS_FOUND -eq 0 ]; then
    print_success "–í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –û—à–∏–±–æ–∫: 0, –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: 0"
    echo ""
    echo -e "${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
elif [ $ERRORS_FOUND -eq 0 ]; then
    print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏: $WARNINGS_FOUND"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è${NC}"
else
    print_error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏: $ERRORS_FOUND, –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNINGS_FOUND"
    echo ""
    echo -e "${RED}‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ${NC}"
fi

echo ""
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo -e "${CYAN}üìã BACKEND API –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ${NC}"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo ""
echo "üîß Backend API:"
echo "   http://$(hostname -I | awk '{print $1}'):8001"
echo "   http://$(hostname -I | awk '{print $1}'):8001/docs (Swagger UI)"
echo ""
echo "üîê –õ–æ–≥–∏–Ω:"
echo "   Username: admin"
echo "   Password: admin"
echo ""
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo -e "${CYAN}üì± –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï API${NC}"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo ""
echo "–ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏–Ω–∞ —á–µ—Ä–µ–∑ curl:"
echo "  curl -X POST http://$(hostname -I | awk '{print $1}'):8001/api/auth/login \\"
echo "    -H 'Content-Type: application/json' \\"
echo "    -d '{\"username\":\"admin\",\"password\":\"admin\"}'"
echo ""
echo "–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:"
echo "  curl http://$(hostname -I | awk '{print $1}'):8001/api/stats \\"
echo "    -H 'Authorization: Bearer –í–ê–®_–¢–û–ö–ï–ù'"
echo ""
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo -e "${CYAN}üéØ –£–°–¢–ê–ù–û–í–ö–ê FRONTEND (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û)${NC}"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo ""
echo "Frontend (React UI) –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ:"
echo ""
echo "  cd /app/frontend"
echo "  npm install --legacy-peer-deps --force"
echo "  npm install ajv@^8.0.0 --legacy-peer-deps"
echo ""
echo "  # –°–æ–∑–¥–∞—Ç—å supervisor –∫–æ–Ω—Ñ–∏–≥:"
echo "  sudo bash -c 'cat > /etc/supervisor/conf.d/connexa-frontend.conf << EOF"
echo "[program:frontend]"
echo "command=/usr/bin/npm start"
echo "directory=/app/frontend"
echo "autostart=true"
echo "autorestart=true"
echo "stderr_logfile=/var/log/supervisor/frontend.err.log"
echo "stdout_logfile=/var/log/supervisor/frontend.out.log"
echo "environment=PATH=\"/usr/local/bin:/usr/bin:/bin\",HOST=\"0.0.0.0\",PORT=\"3000\""
echo "user=root"
echo "EOF'"
echo ""
echo "  # –ó–∞–ø—É—Å—Ç–∏—Ç—å:"
echo "  sudo supervisorctl reread"
echo "  sudo supervisorctl update"
echo "  sudo supervisorctl start frontend"
echo ""
echo "Frontend –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://$(hostname -I | awk '{print $1}'):3000"
echo ""
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo -e "${CYAN}üìù –ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´${NC}"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo ""
echo "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å:"
echo "  sudo supervisorctl status"
echo ""
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend:"
echo "  sudo supervisorctl restart backend"
echo ""
echo "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏:"
echo "  tail -f /var/log/supervisor/backend.err.log"
echo ""
echo "–û–±–Ω–æ–≤–∏—Ç—å –∏–∑ GitHub:"
echo "  cd $INSTALL_DIR && git pull origin $BRANCH"
echo "  sudo supervisorctl restart backend"
echo ""
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

# –ï—Å–ª–∏ frontend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è - –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
if ! supervisorctl status frontend | grep -q "RUNNING"; then
    echo ""
    echo "‚ö†Ô∏è  Frontend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏–∑-–∑–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo ""
    echo "–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "  cd /app/frontend"
    echo "  rm -rf node_modules package-lock.json"
    echo "  npm install --legacy-peer-deps --force"
    echo "  npm install ajv@latest --legacy-peer-deps"
    echo "  sudo supervisorctl restart frontend"
    echo ""
    echo "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ Backend API: http://$(hostname -I | awk '{print $1}'):8001/docs"
    echo ""
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º
if ! [ -e /dev/ppp ]; then
    echo ""
    print_error "/dev/ppp –Ω–µ –Ω–∞–π–¥–µ–Ω - PPTP –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!"
fi

if ! capsh --print 2>/dev/null | grep -q "cap_net_admin"; then
    echo ""
    print_warning "CAP_NET_ADMIN capability –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    echo "   –î–ª—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–æ–±–∞–≤—å—Ç–µ: --cap-add=NET_ADMIN"
    echo "   PPTP —Ç—É–Ω–Ω–µ–ª–∏ –ù–ï –ë–£–î–£–¢ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ —ç—Ç–æ–≥–æ!"
fi

echo ""
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo -e "${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏—è—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã!${NC}"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
echo ""

exit 0
